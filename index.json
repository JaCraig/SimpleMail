{
  "api/SimpleMail.Attachment.html": {
    "href": "api/SimpleMail.Attachment.html",
    "title": "Class Attachment | SimpleMail API Reference",
    "keywords": "Class Attachment Namespace SimpleMail Assembly SimpleMail.dll Attachment for the message public class Attachment Inheritance object Attachment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Constructors Attachment(string, string, byte[]) Initializes a new instance of the Attachment class. public Attachment(string fileName, string mimeType, byte[] content) Parameters fileName string Name of the file. mimeType string Type of the MIME. content byte[] The content. Attachment(string, string, Stream) Initializes a new instance of the Attachment class. public Attachment(string fileName, string mimeType, Stream content) Parameters fileName string Name of the file. mimeType string Type of the MIME. content Stream The content. Properties Content Gets the content. public Stream Content { get; } Property Value Stream The content. ContentId Gets or sets the content identifier (used for embedding images, etc.). public string ContentId { get; set; } Property Value string The content identifier. FileName Gets the name of the file. public string FileName { get; } Property Value string The name of the file. MimeType Gets the type of the MIME. public string MimeType { get; } Property Value string The type of the MIME."
  },
  "api/SimpleMail.Email.html": {
    "href": "api/SimpleMail.Email.html",
    "title": "Class Email | SimpleMail API Reference",
    "keywords": "Class Email Namespace SimpleMail Assembly SimpleMail.dll The class used to send an email. public class Email Inheritance object Email Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Properties Attachments Gets the attachments. public List<Attachment> Attachments { get; } Property Value List<Attachment> The attachments. Bcc Gets or sets the BCC. public string Bcc { get; set; } Property Value string The BCC. Body Gets or sets the body. public string Body { get; set; } Property Value string The body. Cc Gets or sets the cc. public string Cc { get; set; } Property Value string The cc. From Gets or sets from. public string From { get; set; } Property Value string From. IgnoreServerCertificateIssues Gets or sets a value indicating whether to [ignore server certificate issues]. public bool IgnoreServerCertificateIssues { get; set; } Property Value bool true if it should [ignore server certificate issues]; otherwise, false. LocalDomain Gets or sets the local domain. public string LocalDomain { get; set; } Property Value string The local domain. Password Gets or sets the password. public string Password { get; set; } Property Value string The password. Port Gets or sets the port. public int Port { get; set; } Property Value int The port. Priority Gets or sets the priority. public MessagePriority Priority { get; set; } Property Value MessagePriority The priority. Server Gets or sets the server. public string Server { get; set; } Property Value string The server. Subject Gets or sets the subject. public string Subject { get; set; } Property Value string The subject. To Gets or sets to. public string To { get; set; } Property Value string To. UseSSL Gets or sets a value indicating whether [use SSL]. public bool UseSSL { get; set; } Property Value bool true if [use SSL]; otherwise, false. UserName Gets or sets the name of the user. public string UserName { get; set; } Property Value string The name of the user. Methods Send() Sends this email public void Send() SendAsync() Sends the email asynchronously. public Task SendAsync() Returns Task The resulting Task"
  },
  "api/SimpleMail.html": {
    "href": "api/SimpleMail.html",
    "title": "Namespace SimpleMail | SimpleMail API Reference",
    "keywords": "Namespace SimpleMail Classes Attachment Attachment for the message Email The class used to send an email."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Welcome | SimpleMail API Reference",
    "keywords": "Welcome Welcome to the API browser."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Code | SimpleMail API Reference",
    "keywords": "Code namespace SimpleMail.Example { /// <summary> /// Example program to send an email using SimpleMail /// </summary> internal class Program { /// <summary> /// Defines the entry point of the application. /// </summary> /// <param name=\"args\">The arguments.</param> private static async Task Main(string[] args) { // Create a new email Email email = new Email { // Email address to send the email from From = \"system@example.com\", // Email address to send the email to To = \"someone@example.com\", // Subject of the email Subject = \"Example Subject\", // Body of the email Body = \"Example Body\", // Password of the email account Password = \"password\", // Email server to send the email Server = \"smtp.example.com\", // Username of the email account UserName = \"username\", // Port of the email server (default is 25) Port = 587, // Use SSL to encrypt the connection UseSSL = true, // Priority of the email Priority = MimeKit.MessagePriority.Urgent }; // Send the email await email.SendAsync().ConfigureAwait(false); } } }"
  },
  "index.html": {
    "href": "index.html",
    "title": "SimpleMail | SimpleMail API Reference",
    "keywords": "SimpleMail SimpleMail is a C# library designed to simplify sending emails. It provides a convenient and straightforward interface for sending email messages. Features Easy-to-use API for sending emails and attachments Compatible with .NET 8 and above Installation SimpleMail can be easily installed via NuGet: dotnet add package SimpleMail Alternatively, you can search for \"SimpleMail\" in the NuGet Package Manager UI and install it from there. Getting Started To use SimpleMail in your project, follow these simple steps: Add a reference to the SimpleMail namespace in your code file: using SimpleMail; Create an instance of the EmailMessage class: // Create a new email Email email = new Email { // Email address to send the email from From = \"system@example.com\", // Email address to send the email to To = \"someone@example.com\", // Subject of the email Subject = \"Example Subject\", // Body of the email Body = \"Example Body\", // Password of the email account Password = \"password\", // Email server to send the email Server = \"smtp.example.com\", // Username of the email account UserName = \"username\", // Port of the email server (default is 25) Port = 587, // Use SSL to encrypt the connection UseSSL = true, // Priority of the email Priority = MimeKit.MessagePriority.Urgent }; Send the email: await email.SendAsync().ConfigureAwait(false); That's it! You have successfully sent an email using SimpleMail. Compatibility SimpleMail is compatible with .NET 8 and above. Contributing We welcome contributions to SimpleMail! If you encounter any issues, have suggestions for improvements, or would like to contribute new features, please feel free to submit a pull request. License SimpleMail is released under the Apache 2 License."
  }
}