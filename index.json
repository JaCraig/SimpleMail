{
  "api/SimpleMail.Attachment.html": {
    "href": "api/SimpleMail.Attachment.html",
    "title": "Class Attachment | SimpleMail API Reference",
    "keywords": "Class Attachment Attachment for the message Inheritance object Attachment Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleMail Assembly: SimpleMail.dll Syntax public class Attachment Constructors | Edit this page View Source Attachment(string, string, byte[]) Initializes a new instance of the Attachment class. Declaration public Attachment(string fileName, string mimeType, byte[] content) Parameters Type Name Description string fileName Name of the file. string mimeType Type of the MIME. byte[] content The content. | Edit this page View Source Attachment(string, string, Stream) Initializes a new instance of the Attachment class. Declaration public Attachment(string fileName, string mimeType, Stream content) Parameters Type Name Description string fileName Name of the file. string mimeType Type of the MIME. Stream content The content. Properties | Edit this page View Source Content Gets the content. Declaration public Stream Content { get; } Property Value Type Description Stream The content. | Edit this page View Source ContentId Gets or sets the content identifier (used for embedding images, etc.). Declaration public string ContentId { get; set; } Property Value Type Description string The content identifier. | Edit this page View Source FileName Gets the name of the file. Declaration public string FileName { get; } Property Value Type Description string The name of the file. | Edit this page View Source MimeType Gets the type of the MIME. Declaration public string MimeType { get; } Property Value Type Description string The type of the MIME."
  },
  "api/SimpleMail.Email.html": {
    "href": "api/SimpleMail.Email.html",
    "title": "Class Email | SimpleMail API Reference",
    "keywords": "Class Email The class used to send an email. Inheritance object Email Inherited Members object.Equals(object) object.Equals(object, object) object.GetHashCode() object.GetType() object.MemberwiseClone() object.ReferenceEquals(object, object) object.ToString() Namespace: SimpleMail Assembly: SimpleMail.dll Syntax public class Email Properties | Edit this page View Source Attachments Gets the attachments. Declaration public List<Attachment> Attachments { get; } Property Value Type Description List<Attachment> The attachments. | Edit this page View Source Bcc Gets or sets the BCC. Declaration public string Bcc { get; set; } Property Value Type Description string The BCC. | Edit this page View Source Body Gets or sets the body. Declaration public string Body { get; set; } Property Value Type Description string The body. | Edit this page View Source Cc Gets or sets the cc. Declaration public string Cc { get; set; } Property Value Type Description string The cc. | Edit this page View Source From Gets or sets from. Declaration public string From { get; set; } Property Value Type Description string From. | Edit this page View Source IgnoreServerCertificateIssues Gets or sets a value indicating whether to [ignore server certificate issues]. Declaration public bool IgnoreServerCertificateIssues { get; set; } Property Value Type Description bool true if it should [ignore server certificate issues]; otherwise, false. | Edit this page View Source LocalDomain Gets or sets the local domain. Declaration public string LocalDomain { get; set; } Property Value Type Description string The local domain. | Edit this page View Source Password Gets or sets the password. Declaration public string Password { get; set; } Property Value Type Description string The password. | Edit this page View Source Port Gets or sets the port. Declaration public int Port { get; set; } Property Value Type Description int The port. | Edit this page View Source Priority Gets or sets the priority. Declaration public MessagePriority Priority { get; set; } Property Value Type Description MessagePriority The priority. | Edit this page View Source Server Gets or sets the server. Declaration public string Server { get; set; } Property Value Type Description string The server. | Edit this page View Source Subject Gets or sets the subject. Declaration public string Subject { get; set; } Property Value Type Description string The subject. | Edit this page View Source To Gets or sets to. Declaration public string To { get; set; } Property Value Type Description string To. | Edit this page View Source UseSSL Gets or sets a value indicating whether [use SSL]. Declaration public bool UseSSL { get; set; } Property Value Type Description bool true if [use SSL]; otherwise, false. | Edit this page View Source UserName Gets or sets the name of the user. Declaration public string UserName { get; set; } Property Value Type Description string The name of the user. Methods | Edit this page View Source Send() Sends this email Declaration public void Send() | Edit this page View Source SendAsync() Sends the email asynchronously. Declaration public Task SendAsync() Returns Type Description Task The resulting Task"
  },
  "api/SimpleMail.html": {
    "href": "api/SimpleMail.html",
    "title": "Namespace SimpleMail | SimpleMail API Reference",
    "keywords": "Namespace SimpleMail Classes Attachment Attachment for the message Email The class used to send an email."
  },
  "api/index.html": {
    "href": "api/index.html",
    "title": "Welcome | SimpleMail API Reference",
    "keywords": "Welcome Welcome to the API browser."
  },
  "articles/intro.html": {
    "href": "articles/intro.html",
    "title": "Code | SimpleMail API Reference",
    "keywords": "Code namespace SimpleMail.Example { /// <summary> /// Example program to send an email using SimpleMail /// </summary> internal class Program { /// <summary> /// Defines the entry point of the application. /// </summary> /// <param name=\"args\">The arguments.</param> private static async Task Main(string[] args) { // Create a new email Email email = new Email { // Email address to send the email from From = \"system@example.com\", // Email address to send the email to To = \"someone@example.com\", // Subject of the email Subject = \"Example Subject\", // Body of the email Body = \"Example Body\", // Password of the email account Password = \"password\", // Email server to send the email Server = \"smtp.example.com\", // Username of the email account UserName = \"username\", // Port of the email server (default is 25) Port = 587, // Use SSL to encrypt the connection UseSSL = true, // Priority of the email Priority = MimeKit.MessagePriority.Urgent }; // Send the email await email.SendAsync().ConfigureAwait(false); } } }"
  },
  "index.html": {
    "href": "index.html",
    "title": "SimpleMail | SimpleMail API Reference",
    "keywords": "SimpleMail SimpleMail is a C# library designed to simplify sending emails. It provides a convenient and straightforward interface for sending email messages. Features Easy-to-use API for sending emails and attachments Compatible with .NET 6 and above Installation SimpleMail can be easily installed via NuGet: dotnet add package SimpleMail Alternatively, you can search for \"SimpleMail\" in the NuGet Package Manager UI and install it from there. Getting Started To use SimpleMail in your project, follow these simple steps: Add a reference to the SimpleMail namespace in your code file: using SimpleMail; Create an instance of the EmailMessage class: // Create a new email Email email = new Email { // Email address to send the email from From = \"system@example.com\", // Email address to send the email to To = \"someone@example.com\", // Subject of the email Subject = \"Example Subject\", // Body of the email Body = \"Example Body\", // Password of the email account Password = \"password\", // Email server to send the email Server = \"smtp.example.com\", // Username of the email account UserName = \"username\", // Port of the email server (default is 25) Port = 587, // Use SSL to encrypt the connection UseSSL = true, // Priority of the email Priority = MimeKit.MessagePriority.Urgent }; Send the email: await email.SendAsync().ConfigureAwait(false); That's it! You have successfully sent an email using SimpleMail. Compatibility SimpleMail is compatible with .NET 6 and above. Contributing We welcome contributions to SimpleMail! If you encounter any issues, have suggestions for improvements, or would like to contribute new features, please feel free to submit a pull request. License SimpleMail is released under the Apache 2 License."
  }
}